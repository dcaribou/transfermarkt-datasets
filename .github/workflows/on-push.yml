name: Build

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:

    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          ssh-key: ${{ secrets.DEPLOY_KEY_PRIVATE }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Install library
        run: poetry install --no-interaction

      - name: unit tests
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_EC2_METADATA_DISABLED: true # https://github.com/aws/aws-cli/issues/5262
        run: |
        
          poetry run dvc pull
          poetry run pytest -k "not build_all"

      - name: image build
        env:
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          # set image tag accordingly

          REF=$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }')
          if [ $REF = master ];
          then
            TAG=master
          else
            TAG=dev
          fi

          # build and push
          make docker_build docker_push_dockerhub TAG=$TAG PLATFORM=linux/amd64

      - name: run prep
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: eu-west-1
          BRANCH: ${{ github.event.pull_request.head.ref }}
          EVENT: ${{ github.event_name }}
        run: |
          # trigger prep job in aws batch

          if [ $EVENT = push ]; then
            JOB_NAME=on-push-master
            BRANCH=master
            JOB_DEFINITION_NAME=transfermarkt-datasets-batch-job-definition-master
          else
            PR_NUMBER=$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }')
            JOB_NAME=on-push-pr-$PR_NUMBER
            BRANCH=$BRANCH
            JOB_DEFINITION_NAME=transfermarkt-datasets-batch-job-definition-dev
          fi

          source .venv/bin/activate

          make \
            prepare_cloud \
              JOB_DEFINITION_NAME=$JOB_DEFINITION_NAME \
              JOB_NAME=$JOB_NAME \
              BRANCH=$BRANCH
              
      - name: run sync
        # only sync when there is push to master
        if: ${{ github.event_name == 'push' && github.event.head_commit.message != 'ðŸ¤– updated raw dataset files' }}
        env:
          # Kaggle API auth
          KAGGLE_USERNAME: ${{ secrets.KAGGLE_USERNAME }}
          KAGGLE_KEY: ${{ secrets.KAGGLE_KEY }}
          # data.world API auth
          DW_AUTH_TOKEN: ${{ secrets.DW_AUTH_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_EC2_METADATA_DISABLED: true # https://github.com/aws/aws-cli/issues/5262
        run: |
          source .venv/bin/activate
          dvc pull
          make \
            sync \
              MESSAGE="${{ github.event.head_commit.message }}"
